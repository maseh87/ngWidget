{"version":3,"sources":["easy-directive.coffee"],"names":[],"mappings":"AAAA,OAAO,CAAC,MAAR,CAAgB,gBAAhB,EAAiC,EAAjC,CAEA,CAAC,QAFD,CAEW,eAFX,EAE2B,SAAA,GAAA;AAEzB,MAAA,8CAAA;AAAA,EAAA,MAAA,GAAS,EAAT,CAAA;AAAA,EACA,aADA,CAAA;AAAA,EAIA,QAAA,GACE;AAAA,IAAA,QAAA,EAAW,qDAAX;AAAA,IACA,IAAA,EAAM,SAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,GAAA;AAGJ,MAAA,OAAO,CAAC,OAAR,CAAgB,MAAhB,EAAwB,SAAC,KAAD,EAAQ,GAAR,GAAA;eACtB,IAAI,CAAC,EAAL,CAAQ,GAAR,EAAa,KAAb,EADsB;MAAA,CAAxB,CAAA,CAAA;aAIA,KAAK,CAAC,GAAN,CAAW,UAAX,EAAsB,SAAA,GAAA;eAEpB,OAAO,CAAC,OAAR,CAAgB,KAAhB,EAAuB,SAAC,KAAD,EAAQ,GAAR,GAAA;iBACrB,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,KAAd,EADqB;QAAA,CAAvB,EAFoB;MAAA,CAAtB,EAPI;IAAA,CADN;AAAA,IAaA,UAAA,EAAY,KAbZ;AAAA,IAcA,QAAA,EAAW,IAdX;AAAA,IAeA,KAAA,EAAO,aAfP;AAAA,IAgBA,EAAA,EAAI,SAAC,KAAD,EAAQ,QAAR,GAAA;aAEF,MAAM,CAAC,KAAP,GAAe,SAFb;IAAA,CAhBJ;GALF,CAAA;AAAA,EA0BA,WAAA,GAAc,SAAA,GAAA;AACZ,IAAA,OAAO,CAAC,MAAR,CAAe,IAAf,EAAkB,QAAlB,CAAA,CAAA;WAEA,IAAC,CAAA,YAAD,GAAgB,SAAC,MAAD,GAAA;AAEd,UAAA,aAAA;AAAA,MAAA,IAA2B,MAAA,KAAW,QAAtC;AAAA,QAAA,aAAA,GAAiB,OAAjB,CAAA;OAAA;AAEA,MAAA,IAA0B,MAAA,KAAW,OAArC;AAAA,QAAA,aAAA,GAAiB,MAAjB,CAAA;OAFA;AAIA,MAAA,IAAG,OAAO,CAAC,QAAR,CAAiB,MAAjB,CAAH;eAEE,OAAO,CAAC,OAAR,CAAgB,MAAhB,EAAwB,SAAC,KAAD,EAAQ,GAAR,GAAA;AACtB,UAAA,IAAe,KAAA,KAAU,WAAV,IAAwB,KAAA,KAAU,SAAjD;AAAA,YAAA,KAAA,GAAS,GAAT,CAAA;WAAA;AACA,UAAA,IAAe,KAAA,KAAU,SAAzB;AAAA,YAAA,KAAA,GAAS,GAAT,CAAA;WADA;AAEA,UAAA,IAAe,KAAA,KAAU,UAAzB;mBAAA,KAAA,GAAS,IAAT;WAHsB;QAAA,CAAxB,EAFF;OANc;IAAA,EAHJ;EAAA,CA1Bd,CAAA;AA2CA,SAAO,eAAA,GACL;AAAA,IAAA,IAAA,EAAM,SAAA,GAAA;aACJ,YADI;IAAA,CAAN;AAAA,IAGA,WAAA,EAAa,SAAC,MAAD,GAAA;aACX,OAAO,CAAC,MAAR,CAAe,QAAf,EAAyB,MAAzB,EADW;IAAA,CAHb;GADF,CA7CyB;AAAA,CAF3B,CAAA,CAAA","file":"easy-directive.js","sourceRoot":"/source/","sourcesContent":["angular.module 'easy-directive', []\n\n.provider 'easyDirective', ->\n\n  events = {}\n  _scopeOptions\n\n  # Default properties for the directive\n  defaults =\n    template: '<div>Default ngWidget template, go change it!</div>'\n    link: (scope, elem, attrs)->\n      # Iterate through an object of events and callbacks\n      # passing each one into elem.on\n      angular.forEach events, (value, key)->\n        elem.on key, value\n\n      # Listen for the $destroy event to clean up\n      scope.$on '$destroy', ->\n        #then iterate through the elements and call element.off on each event\n        angular.forEach event, (value, key)->\n          elem.off key, value\n\n    transclude: false\n    restrict: 'EA'\n    scope: _scopeOptions\n    on: (event, callback)->\n      # store the users events in the events object to use in the link function\n      events.event = callback\n\n  # Extends @ with the defaults object\n  MyDirective = ->\n    angular.extend @, defaults\n    # Configurations for the directive's scope\n    @scopeOptions = (option)->\n      # scope: false === 'parent'\n      _scopeOptions = 'false' if option is 'parent'\n      # scope: true === 'child'\n      _scopeOptions = 'true' if option is 'child'\n      # scope: {} for isolate scope\n      if angular.isObject option\n        # Will have to iterate through object to convert the values\n        angular.forEach option, (value, key)->\n          value = '@' if value is 'attrValue' or value is 'one-way'\n          value = '=' if value is 'two-way'\n          value = '&' if value is 'function'\n\n  # Object to return for the injector\n  return directiveObject =\n    $get: ->\n      MyDirective\n    # Option for the config block of the user to overwrite the defaults\n    setDefaults: (config)->\n      angular.extend defaults, config\n"]}